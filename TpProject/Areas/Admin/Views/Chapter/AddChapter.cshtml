@model TpProject.Models.ViewModels.Shop.ChapterVM

@using TpProject.Models.Data;

@{
    Db db = new Db();
    ViewBag.Title = "Add Chapter";
    ChaptersForCoursesDTO dto = db.ChaptersForCourses.Find(Model.Id);
}

<h2>Add Chapter</h2>

@if (TempData["SM"] != null) {
<div class="alert alert-success">
    @TempData["SM"]
</div>
}

@using (Html.BeginForm(Html.BeginForm("AddChapter", "Chapter",
    FormMethod.Post, new { enctype = "multipart/form-data" }))) {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add chapter" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    <h1 class="text-uppercase">Fix this</h1>
    @Html.Action("CourseDetails", "Shop", new { id = dto.CourseId })
</div>